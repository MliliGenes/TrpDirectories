{
  "guides": [
    {
      "id": "-pragma-once-vs-header-guards--complete-guide",
      "title": "#pragma once vs Header Guards: Complete Guide",
      "path": "guides/pragma-once-vs-header-guards-complete-guide/",
      "description": "Comprehensive guide to C++ header inclusion mechanisms, covering both traditional header guards and #pragma once, their mechanics, use cases, and why using both together provides optimal compatibility and performance.",
      "author": "sel-mlil",
      "tags": [
        "c++",
        "preprocessor",
        "header-guards",
        "pragma-once",
        "compilation",
        "best-practices",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-29"
    },
    {
      "id": "cpp-enums-vs-enum-classes--a-complete-guide",
      "title": "CPP Enums vs Enum Classes: A Complete Guide",
      "path": "guides/cpp-enums-vs-enum-classes-a-complete-guide/",
      "description": "A comprehensive guide to understanding the differences between C++98 enums and modern enum classes, including their mechanics, use cases, pitfalls, and best practices for building clean structures such as a JSON parser.",
      "author": "sel-mlil",
      "tags": [
        "c++",
        "enums",
        "enum class",
        "json parser",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-27"
    },
    {
      "id": "cpp-templates--from-basics-to-raii-smart-pointers--c--98-",
      "title": "CPP Templates: From Basics to RAII Smart Pointers (C++98)",
      "path": "guides/cpp-templates-from-basics-to-raii-smart-pointers-c98/",
      "description": "A comprehensive guide to C++98 templates covering core concepts, mechanics, practical examples including building an RAII auto pointer, use cases, pros/cons, and common pitfalls.",
      "author": "sel-mlil",
      "tags": [
        "c++",
        "templates",
        "c++98",
        "raii",
        "smart-pointers",
        "generic-programming",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-29"
    },
    {
      "id": "cpp-stl-containers--vector-and-map-mastery-guide",
      "title": "CPP STL Containers: Vector and Map Mastery Guide",
      "path": "guides/cpp-stl-containers-vector-and-map-mastery-guide/",
      "description": "An exhaustive, deep-dive guide covering the STL, focusing on std::vector and std::map from basic concepts to advanced use cases, performance characteristics, and best practices essential for C++98 professional mastery.",
      "author": "sel-mlil",
      "tags": [
        "c++",
        "c++98",
        "stl",
        "vector",
        "map",
        "data-structures",
        "performance"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-27"
    },
    {
      "id": "cpu-architectures-complete-guide",
      "title": "CPU Architectures Complete Guide",
      "path": "guides/cpu-architectures-complete-guide/",
      "description": "Comprehensive guide to CPU architectures covering Von Neumann, Harvard, CISC, RISC, superscalar, vector processing, multi-core designs, and modern hybrid architectures with detailed analysis of real-world processors.",
      "author": "sel-mlil",
      "tags": [
        "cpu",
        "architecture",
        "x86",
        "arm",
        "computer-science",
        "risc",
        "cisc",
        "superscalar",
        "processors",
        "microarchitecture"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-29"
    },
    {
      "id": "lexical-analysis-mastery--building-high-performance-lexers-from-scratch",
      "title": "Lexical Analysis Mastery: Building High-Performance Lexers from Scratch",
      "path": "guides/lexical-analysis-mastery-building-high-performance-lexers-from-scratch/",
      "description": "A comprehensive deep-dive guide covering lexical analysis from basic concepts to production-ready implementations, focusing on tokenization, pattern recognition, and performance optimization essential for compiler construction and language processing.",
      "author": "sel-mlil",
      "tags": [
        "compiler-theory",
        "lexical-analysis",
        "tokenization",
        "parsing",
        "c",
        "cpp",
        "performance",
        "language-design"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-27"
    },
    {
      "id": "raii--resource-acquisition-is-initialization",
      "title": "RAII: Resource Acquisition Is Initialization",
      "path": "guides/raii-resource-acquisition-is-initialization/",
      "description": "A comprehensive guide to understanding RAII, one of the most powerful resource management techniques in software engineering. Learn how RAII ensures automatic cleanup, prevents memory leaks, and makes code exception-safe.",
      "author": "sel-mlil",
      "tags": [
        "raii",
        "resource-management",
        "c++",
        "memory-safety",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-10-02"
    },
    {
      "id": "recursive-descent-parsing--from-theory-to-implementation",
      "title": "Recursive Descent Parsing: From Theory to Implementation",
      "path": "guides/recursive-descent-parsing-from-theory-to-implementation/",
      "description": "A comprehensive guide to understanding and implementing recursive descent parsers, covering theory, practical examples, and real-world applications for compiler design and language processing",
      "author": "sel-mlil",
      "tags": [
        "parsing",
        "compilers",
        "recursive-descent",
        "grammar",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-28"
    },
    {
      "id": "vectors-in-c--98--your-comprehensive-guide",
      "title": "Vectors in C++98: Your Comprehensive Guide",
      "path": "guides/vectors-in-c98-your-comprehensive-guide/",
      "description": "A detailed guide covering the functionalities, use cases, mechanics, and best practices of `std::vector` in C++98, complete with code examples and common pitfalls.",
      "author": "sel-mlil",
      "tags": [
        "c++",
        "c++98",
        "vector",
        "stl",
        "data-structures",
        "beginner",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-26"
    },
    {
      "id": "virtual-hosting---complete-mastery-guide",
      "title": "Virtual Hosting - Complete Mastery Guide",
      "path": "guides/virtual-hosting-complete-mastery-guide/",
      "description": "Comprehensive guide to virtual hosting covering Apache, Nginx, and Kubernetes implementations. Learn how to host multiple websites on a single server, configure SSL, optimize performance, and avoid common pitfalls. Includes hands-on exercises from beginner to advanced levels.",
      "author": "sel-mlil",
      "tags": [
        "virtual-hosting",
        "nginx",
        "apache",
        "web-servers",
        "devops",
        "ssl",
        "intermediate"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-30"
    },
    {
      "id": "sockets---poll",
      "title": "Sockets & Poll",
      "path": "guides/sockets-poll/",
      "description": "Master network programming with sockets and efficient I/O multiplexing using poll",
      "author": "sel-mlil",
      "tags": [
        "networking",
        "sockets",
        "poll",
        "server programming",
        "I/O multiplexing"
      ],
      "difficulty": "advanced",
      "lastUpdated": "2025-09-26"
    },
    {
      "id": "struct-padding---alignment",
      "title": "Struct Padding & Alignment",
      "path": "guides/struct-padding-alignment/",
      "description": "Comprehensive guide covering low-level programming concepts and memory management",
      "author": "sel-mlil",
      "tags": [
        "memory",
        "structs",
        "alignment",
        "padding",
        "c programming"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-26"
    },
    {
      "id": "x86-cpu-16-bit-real-mode",
      "title": "x86 CPU 16-bit Real Mode",
      "path": "guides/x86-cpu-16-bit-real-mode/",
      "description": "A comprehensive guide to the 16-bit Real Mode of x86 CPUs, covering its segmented memory, historical context, and role in the modern PC boot process.",
      "author": "sel-mlil",
      "tags": [
        "x86",
        "Assembly",
        "CPU Architecture",
        "Real Mode",
        "Operating Systems",
        "Low-Level Programming"
      ],
      "difficulty": "intermediate",
      "lastUpdated": "2025-09-26"
    }
  ],
  "metadata": {
    "version": "2.1.0",
    "lastModified": "2025-10-02T08:50:54.360Z",
    "totalGuides": 13,
    "system": "Automated JSON-to-HTML guide generation",
    "description": "Dynamically built from articles directory"
  }
}